{"version":3,"sources":["components/images/Logo.png","components/AppHeader.js","components/ProfilePage.js","components/Profile.js","components/images/sign-spritesheet-1200.png","components/images/sign-spritesheet-1200.webp","components/OutPutbox.js","components/utils/HandSigns.js","components/utils/MyLocalStorage.js","components/InputBar.js","components/utils/SaveTranslations.js","components/InputTranslation.js","App.js","reportWebVitals.js","index.js"],"names":["Appheader","forwardRef","props","ref","header","useRef","lhwrap","history","useHistory","useImperativeHandle","shrinkHeader","current","classList","value","toggle","push","className","src","Logo","alt","ProfilePage","useState","translatedWords","setTranslate","updateList","translations","map","item","i","localStorage","getItem","onClick","clear","Profile","JSON","parse","userData","setUserData","storageListen","e","useEffect","window","addEventListener","removeEventListener","ppw","document","querySelector","console","log","remove","add","Outputbox","handPos","letters","x","y","length","posObj","id","letter","HandSigns","translate","strToTranslate","ArrToTranslate","toUpperCase","split","result","filter","includes","translation","find","j","hand-data","signhands","srcSet","signhandswebp","style","left","top","Math","random","toString","substr","MyLocalStorage","key","initialValue","error","storedValue","setStoredValue","valueToStore","Function","prevState","setItem","stringify","InputBar","passToHeader","name","setName","inputValue","htmlFor","icon","cleanValue","replace","placeholder","dispatchEvent","Event","type","pattern","aria-label","required","passToOutPutBox","passToProfile","setTranslation","inputwrap","inputwhitewrap","saveit","pop","unshift","library","fab","far","faArrowAltCircleRight","faKeyboard","App","headerRef","outputbox","profilepageRef","exact","path","component","InputTranslation","strTotranslate","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f86acb65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.6aa7feef.png\";","import React, { forwardRef, useRef, useImperativeHandle } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport '../App.css';\nimport './css/AppHeader.css'\nimport Logo from './images/Logo.png'\n\nconst Appheader = forwardRef((props, ref) => {\n\n    const header = useRef(null);\n    const lhwrap = useRef(null);\n    let history = useHistory();\n\n    /**Collaps header when the name is set */\n    useImperativeHandle(ref, () => ({\n        /**Toggle header animation */\n        shrinkHeader() {\n            if (header.current.classList.value === 'headerActive') {\n                header.current.classList.toggle(\"shrink\");\n                lhwrap.current.classList.toggle(\"gone\");\n                //Push new url path\n                history.push(\"/translate\");\n            }\n        }\n    }));\n\n    return (\n        <div>\n            <header ref={header} className=\"headerActive\">\n                <span className=\"miniHeader\">Lost in translation</span>\n                <hr className=\"divider\" />\n                <div ref={lhwrap} className=\"lhwrap\">\n                    <div className=\"logowrap\">\n                        <img src={Logo} className=\"logoimg\" alt=\"lost-in-translation logo\" />\n                    </div>\n                    <div className=\"hwrap\">\n                        <h1>Lost in translation</h1><br />\n                        <h2>Get startet</h2>\n                    </div>\n                </div>\n            </header>\n\n        </div>);\n});\n\nexport default Appheader;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport './css/ProfilePage.css'\nconst ProfilePage = forwardRef((props, ref) => {\n\n    const [translatedWords, setTranslate] = useState([]);\n\n    useImperativeHandle(ref, () => ({\n\n        updateList(translations) {\n            setTranslate(translations)\n        }\n\n    }));\n\n    function clarlocal() {\n        localStorage.clear();\n    }\n\n    return (\n\n        <div className=\"profilePagewrap\">\n            <h6>Your 10 latest translations</h6>\n            <ul>\n                {translatedWords.map((item, i) => {\n                    return <li key={i}>{item}</li>\n                })}\n            </ul>\n            <div className=\"logoutwrap\">\n                {localStorage.getItem('username') != null && <div className=\"logout\" onClick={clarlocal}>LOGOUT</div>}\n            </div>\n\n        </div>\n    )\n\n\n});\n\nexport default ProfilePage","import React, { forwardRef, useEffect, useState } from \"react\";\n\nfunction Profile() {\n\n    //const localUser = JSON.parse(localStorage.getItem('username'));\n    let [userData, setUserData] = useState(JSON.parse(localStorage.getItem('username')));\n\n    const storageListen = e => {\n        setUserData(JSON.parse(localStorage.getItem('username')));\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"storage\", storageListen);\n        return () => window.removeEventListener(\"storage\", storageListen);\n    }, []);\n\n\n    function showIntries() {\n        let ppw = document.querySelector('.profilePagewrap')\n        console.log(ppw.classList)\n\n        if (ppw.className !== 'profilePagewrap popout') {\n            ppw.classList.remove(\"popin\")\n            ppw.classList.add(\"popout\");\n\n        } else {\n            ppw.classList.remove(\"popout\")\n            ppw.classList.add(\"popin\");\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"profilewrap\" onClick={showIntries}>\n                <div className=\"profileName\">\n                    {userData}\n                </div>\n                <div className=\"profileImage\"></div>\n            </div>\n\n        </div>\n    )\n\n}\nexport default Profile;","export default __webpack_public_path__ + \"static/media/sign-spritesheet-1200.3ec1a72d.png\";","export default __webpack_public_path__ + \"static/media/sign-spritesheet-1200.5c9a1712.webp\";","\nimport React, { forwardRef, useState, useImperativeHandle } from \"react\";\nimport '../App.css';\nimport './css/OutPutBox.css'\nimport { HandSigns } from './utils/HandSigns'\nimport signhands from './images/sign-spritesheet-1200.png'\nimport signhandswebp from './images/sign-spritesheet-1200.webp'\n\nconst Outputbox = forwardRef((props, ref) => {\n\n    const handPos = HandSigns();\n    const [translate, setTranslate] = useState([]);\n\n    useImperativeHandle(ref, () => ({\n\n        translate(strToTranslate) {\n         \n            /**create array from the string  */\n            let ArrToTranslate = strToTranslate.toUpperCase().split('');\n            /**Find matching letters in in hand potision object */\n            const lettersList = letter => ArrToTranslate.includes(letter)\n            let result = handPos.filter(item => lettersList(item.letter))\n            /**Sort the matching letters so the match the strings array index */\n            const translation = ArrToTranslate.map((i) => result.find((j) => j.letter === i));\n\n            setTranslate(translation)\n        }\n\n    }));\n    /**\n     * random unique key for react to keep track of\n     * child in list\n     */\n    function randKey() {\n        return Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div>\n            <div className=\"outputwrap\">\n                <div className=\"outputwhitewrap\">\n\n                    {translate.map((translate) =>\n                        <div className=\"hands\" hand-data={translate.letter} key={randKey()}>\n                            {/**i put in a srcSet for good messures why not save 124kb if the browser alows it \n                             * setting top and left on img tag to move sprite sheet arround inside hands-div\n                            */}\n                            <img src={signhands} srcSet={signhandswebp} style={{ left: \"-\" + translate.x + 'px', top: \"-\" + translate.y + 'px' }} alt={\"ASL hand of the letter \" + translate.letter} />\n                        </div>)}\n                </div>\n            </div>\n\n        </div>);\n});\n\nexport default Outputbox;","/**Create an object to hold sprite sheet corordinates\n * and add a letter to refernce\n*/\nexport function HandSigns() {\n\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \" \"]\n    const handPos = [];\n\n    let x = 0;\n    let y = 0;\n\n    for (let i = 0; i < letters.length; i++) {\n\n        /**\n         * Image is set to half size in css 1200/2 =600x300.\n         * There are 8 hands in each row\n         * so each time i counts 8 increace y position by 75\n         *  75x4=300 \n        */\n\n        if (i === 8) {\n            y = 75\n        }\n        if (i === 16) {\n            y = 150\n        }\n        if (i === 24) {\n            y = 225\n\n        }\n\n        /** \n         * Image is set to half size in css 1200/2 =600x300.\n         * Each time the end of the image width is\n         * reached reset x position to zerro\n         * */\n        if (x === 600) {\n            x = 0\n        }\n\n        let posObj = { id: i, letter: letters[i], x: x, y: y };\n        handPos.push(posObj)\n        x += 75\n    }\n\n    return handPos\n}","\n/**Generic/reusable local Storage */\n/**Not my code \n * https://codesandbox.io/s/qxkr4mplv6?file=/src/use-local-storage.js\n */\n\nimport { useState,useEffect } from 'react';\n\nexport default function MyLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n   \n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(prevState => [...prevState, valueToStore]);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React, { useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport '../App.css';\nimport './css/InputBar.css'\nimport './css/Profile.css'\n/*using fontawesome for the icons */\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport MyLocalStorage from './utils/MyLocalStorage'\n\n//passToOutPutBox\nconst InputBar = ({ passToHeader}) => {\n\n  const [name, setName] = MyLocalStorage('username',);\n  let history = useHistory();\n  const inputValue = useRef(null);\n\n\n\n  useEffect(() => {\n    if(name){\n      history.push(\"/translate\");\n\n    }\n  }, [name]);\n\n\n  const addValue = () => {\n\n    /**Make sure the input is clean */\n    let cleanValue = inputValue.current.value.replace(/[^a-zA-Z ]/g, \"\");\n    inputValue.current.value = cleanValue;\n\n    /**Create object to be stored in localStorage */\n    if (inputValue.current.value && inputValue.current.placeholder === \"What's your name?\") {\n    \n       setName(inputValue.current.value);\n        window.dispatchEvent(new Event(\"storage\"));\n      /**Empty input value and change placeholder text */\n      inputValue.current.value = \"\";\n      inputValue.current.placeholder = \"Time to translate\"\n\n      /**Tell header to animate */\n      passToHeader()\n\n    }\n\n  }\n\n  return (\n    <div>\n      {/* only show profile if you entered a name */}\n      <main>\n        <div className=\"inputwrap\">\n          <div className=\"inputwhitewrap\">\n            <div className=\"formwrap\">\n              <div className=\"form-input \">\n                <label htmlFor=\"input\" className=\"iconl\"><FontAwesomeIcon className=\"far fa-keyboard\" icon='keyboard' /></label>\n                <div className=\"iconr\" onClick={addValue}><FontAwesomeIcon className=\"fas fon\" icon='arrow-alt-circle-right' /></div>\n                <input ref={inputValue} id=\"input\" type=\"text\" className=\"input\" placeholder=\"What's your name?\" pattern=\"[A-Za-z]\" aria-label=\"Enter your translation here\" required />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>);\n};\n\nexport default InputBar;","/**create array of translations */\nconst translations=[]\nexport function SaveTranslations(saveit){\n    \n    /**Remove last item if array is anylonger than then */\n    if(translations.length>9){\n        translations.pop();\n    }\n\n    /**unshift array to add items at the start of the array*/\n    translations.unshift(saveit)\n    console.log(translations)\n    console.log(\"from translations array\")\n    return translations \n}","import React, { useRef, useEffect } from \"react\";\nimport '../App.css';\nimport './css/InputBar.css'\n\nimport './css/Profile.css'\n/*using fontawesome for the icons */\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport MyLocalStorage from './utils/MyLocalStorage'\nimport { SaveTranslations } from './utils/SaveTranslations'\n\nconst InputBar = ({ passToOutPutBox ,passToProfile}) => {\n\n  const [translation, setTranslation] = MyLocalStorage('translations', []);\n\n  const inputValue = useRef(null);\n  const inputwrap = useRef(null);\n  const inputwhitewrap = useRef(null);\n\n  useEffect(() => {\n  /**Animate/fade background out on input wrappers */\n inputwrap.current.classList.toggle(\"nobg1\");\n inputwhitewrap.current.classList.toggle(\"nobg2\");\n  }, []);\n  \n  useEffect(() => {\n    if (translation) {\n        passToProfile(translation)\n    }\n  }, [translation]);\n\n  const addTranslation = () => {\n  \n    /**Make sure the input is clean */\n    let cleanValue = inputValue.current.value.replace(/[^a-zA-Z ]/g, \"\");\n    inputValue.current.value = cleanValue;\n\n    if (inputValue.current.value) {\n    \n      /**SaveTranslations (bad name) creates an array no longer than 10 items long newest first oldest last*/\n      setTranslation([...SaveTranslations(inputValue.current.value)])\n      /**Pass input string to outputbox /translator */\n      passToOutPutBox(inputValue.current.value)\n      \n    }}\n\n  return (\n    <div>   \n        <div ref={inputwrap} className=\"inputwrap\">\n          <div ref={inputwhitewrap} className=\"inputwhitewrap\">\n            <div className=\"formwrap\">\n              <div className=\"form-input\">\n                <label htmlFor=\"input x\" className=\"iconl\"><FontAwesomeIcon className=\"far fa-keyboard\" icon='keyboard' /></label>\n                <div className=\"iconr x\" onClick={addTranslation}><FontAwesomeIcon className=\"fas fon\" icon='arrow-alt-circle-right' /></div>\n                <input ref={inputValue} id=\"input\" type=\"text\" className=\"input\" placeholder=\"Translate?\" pattern=\"[A-Za-z]\" aria-label=\"Enter your translation here\" required />\n              </div>\n            </div>\n          </div>\n        </div>\n     \n    </div>);\n};\n\nexport default InputBar;","import './App.css';\n\nimport React, { useRef, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Appheader from './components/AppHeader'\nimport ProfilePage from './components/ProfilePage'\nimport Profile from './components/Profile';\n//import Home from './components/Home'\nimport Outputbox from './components/OutPutbox'\nimport Inputbar from './components/InputBar'\nimport InputTranslation from './components/InputTranslation'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { faArrowAltCircleRight, faKeyboard } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, far, faArrowAltCircleRight, faKeyboard)\n\nfunction App() {\n\n      const headerRef = useRef();\n      const outputbox = useRef();\n      const profilepageRef = useRef();\n\n      //using forwardRef to pass information from child component to child component\n      function passToHeader() {\n            /**Tell header to Animate */\n            headerRef.current.shrinkHeader()\n      }\n\n      function passToOutPutBox(strTotranslate) {\n            /**send input value to translation */\n            outputbox.current.translate(strTotranslate);\n      }\n\n      function passToProfile(translation) {\n            /**send translated value to profile */\n            profilepageRef.current.updateList(translation)\n      }\n\n      return (\n            <div>\n\n                  <Router>\n                        <Appheader ref={headerRef} />\n                        <ProfilePage ref={profilepageRef} />\n                        <Profile />\n                        <Switch>\n                              <Route exact path=\"/\" component={() => <Inputbar passToHeader={passToHeader} />} />\n                              <Route path='/translate'>\n                                    <Fragment>\n                                          <InputTranslation passToOutPutBox={passToOutPutBox} passToProfile={passToProfile} />\n                                          <Outputbox ref={outputbox} />\n                                    </Fragment>\n                              </Route>\n                        </Switch>\n                  </Router>\n\n            </div>\n      );\n\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}