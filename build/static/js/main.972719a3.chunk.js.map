{"version":3,"sources":["components/images/Logo.png","components/AppHeader.js","components/Home.js","components/images/sign-spritesheet-1200.png","components/images/sign-spritesheet-1200.webp","components/OutPutbox.js","components/utils/HandSigns.js","components/Profile.js","components/utils/MyLocalStorage.js","components/utils/SaveTranslations.js","components/InputBar.js","App.js","reportWebVitals.js","index.js"],"names":["Appheader","forwardRef","props","ref","header","useRef","lhwrap","history","useHistory","useImperativeHandle","shrinkHeader","current","classList","value","toggle","push","className","src","Logo","alt","Home","Outputbox","handPos","letters","x","y","i","length","posObj","id","letter","HandSigns","useState","translate","setTranslate","strToTranslate","console","log","ArrToTranslate","toUpperCase","split","result","filter","item","includes","translation","map","find","j","hand-data","signhands","srcSet","signhandswebp","style","left","top","Math","random","toString","substr","Profile","name","MyLocalStorage","key","defaultValue","stored","localStorage","getItem","initial","JSON","parse","setValue","useEffect","setItem","stringify","translations","InputBar","passToHeader","passToOutPutBox","setName","setTranslation","inputValue","inputwrap","inputwhitewrap","htmlFor","icon","onClick","saveit","cleanValue","replace","placeholder","pop","unshift","type","pattern","aria-label","required","library","add","fab","far","faArrowAltCircleRight","faKeyboard","App","headerRef","outputbox","strTotranslate","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.972719a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.6aa7feef.png\";","import React, { forwardRef, useRef, useImperativeHandle } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport '../App.css';\nimport './css/AppHeader.css'\nimport Logo from './images/Logo.png'\n\nconst Appheader = forwardRef((props, ref) => {\n\n    const header = useRef(null);\n    const lhwrap = useRef(null);\n    let history = useHistory();\n\n    /**Collaps header when the name is set */\n    useImperativeHandle(ref, () => ({\n        /**Toggle header animation */\n        shrinkHeader() {\n            if (header.current.classList.value === 'headerActive') {\n                header.current.classList.toggle(\"shrink\");\n                lhwrap.current.classList.toggle(\"gone\");\n                //Push new url path\n                history.push(\"/translate\");\n            }}\n    }));\n\n\n    return (\n        <div>\n            <header ref={header} className=\"headerActive\">\n                <span className=\"miniHeader\">Lost in translation</span>\n                <hr className=\"divider\" />\n                <div ref={lhwrap} className=\"lhwrap\">\n                    <div className=\"logowrap\">\n                        <img src={Logo} className=\"logoimg\" alt=\"lost-in-translation logo\" />\n                    </div>\n                    <div className=\"hwrap\">\n                        <h1>Lost in translation</h1><br />\n                        <h2>Get startet</h2>\n                    </div>\n                </div>\n            </header>\n\n        </div>);\n});\n\nexport default Appheader;\n","import React from 'react'\n\nconst Home = () => (\n  <div>\n  </div>\n)\n\nexport default Home","export default __webpack_public_path__ + \"static/media/sign-spritesheet-1200.3ec1a72d.png\";","export default __webpack_public_path__ + \"static/media/sign-spritesheet-1200.5c9a1712.webp\";","\nimport React, { forwardRef, useState, useImperativeHandle } from \"react\";\nimport '../App.css';\nimport './css/OutPutBox.css'\nimport { HandSigns } from './utils/HandSigns'\nimport signhands from './images/sign-spritesheet-1200.png'\nimport signhandswebp from './images/sign-spritesheet-1200.webp'\n\nconst Outputbox = forwardRef((props, ref) => {\n\n    const handPos = HandSigns();\n    const [translate, setTranslate] = useState([]);\n\n    useImperativeHandle(ref, () => ({\n\n        translate(strToTranslate) {\n            console.log(strToTranslate + \" Trans\")\n            /**create array from the string  */\n            let ArrToTranslate = strToTranslate.toUpperCase().split('');\n            /**Find matching letters in in hand potision object */\n            const lettersList = letter => ArrToTranslate.includes(letter)\n            let result = handPos.filter(item => lettersList(item.letter))\n            /**Sort the matching letters so the match the strings array index */\n            const translation = ArrToTranslate.map((i) => result.find((j) => j.letter === i));\n\n            setTranslate(translation)\n\n        }\n\n    }));\n\n\n   \n    /**\n     * random unique key for react to keep track of\n     * child in list\n     */\n    function randKey() {\n        return Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div>\n            <div className=\"outputwrap\">\n                <div className=\"outputwhitewrap\">\n\n                    {translate.map((translate) =>\n                        <div className=\"hands\" hand-data={translate.letter} key={randKey()}>\n                            {/**i put in a srcSet for good messures why not save 124kb if the browser alows it \n                             * setting top and left on img tag to move sprite sheet arround inside hands-div\n                            */}\n                            <img src={signhands} srcSet={signhandswebp} style={{ left: \"-\" + translate.x + 'px', top: \"-\" + translate.y + 'px' }} alt={\"ASL hand of the letter \" + translate.letter} />\n\n                        </div>\n\n                    )}\n\n                </div>\n            </div>\n\n        </div>);\n});\n\nexport default Outputbox;","/**Create an object to hold sprite sheet corordinates\n * and add a letter to refernce\n*/\nexport function HandSigns() {\n\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \" \"]\n    const handPos = [];\n\n    let x = 0;\n    let y = 0;\n\n    for (let i = 0; i < letters.length; i++) {\n\n        /**\n         * Image is set to half size in css 1200/2 =600x300.\n         * There are 8 hands in each row\n         * so each time i counts 8 increace y position by 75\n         *  75x4=300 \n        */\n\n        if (i === 8) {\n            y = 75\n        }\n        if (i === 16) {\n            y = 150\n        }\n        if (i === 24) {\n            y = 225\n\n        }\n\n        /** \n         * Image is set to half size in css 1200/2 =600x300.\n         * Each time the end of the image width is\n         * reached reset x position to zerro\n         * */\n        if (x === 600) {\n            x = 0\n        }\n\n        let posObj = { id: i, letter: letters[i], x: x, y: y };\n        handPos.push(posObj)\n        x += 75\n    }\n\n    return handPos\n}","import React from \"react\";\n\nfunction Profile({name}){\n\n    return(\n        <div>\n        <div className=\"profilewrap\">\n            <div className=\"profileName\">{name}</div>\n            <div className=\"profileImage\"></div>\n        </div>\n\n        </div>\n    )\n\n\n}\nexport default Profile;","\n/**Generic/reusable local storrage */\nimport { useState, useEffect } from 'react';\n\nexport const MyLocalStorage = (key, defaultValue) => {\n    const stored = localStorage.getItem(key);\n    const initial = stored ? JSON.parse(stored) : defaultValue;\n    const [value, setValue] = useState(initial);\n  \n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n  \n    return [value, setValue];\n  }\n  ","/**create array of translations */\nconst translations=[]\nexport function SaveTranslations(saveit){\n    \n    /**Remove last item if array is anylonger than then */\n    if(translations.length>9){\n        translations.pop();\n    }\n\n    /**unshift array to add items at the start of the array*/\n    translations.unshift(saveit)\n    return translations \n}","import React, { useRef } from \"react\";\nimport '../App.css';\nimport './css/InputBar.css'\nimport Profile from './Profile';\nimport './css/Profile.css'\n/*using fontawesome for the icons */\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MyLocalStorage } from './utils/MyLocalStorage'\nimport {SaveTranslations} from './utils/SaveTranslations'\nconst InputBar = ({ passToHeader, passToOutPutBox }) => {\n\n  const [name, setName] = MyLocalStorage('username', '');\n  const [translation, setTranslation] = MyLocalStorage('translations', []);\n\n  const inputValue = useRef(null);\n  const inputwrap = useRef(null);\n  const inputwhitewrap = useRef(null);\n\n  const addValue = () => {\n   \n    /**Make sure the input is clean */\n    let cleanValue = inputValue.current.value.replace(/[^a-zA-Z ]/g, \"\");\n    inputValue.current.value = cleanValue;\n\n    /**Create object to be stored in localStorage */\n    if (inputValue.current.value && inputValue.current.placeholder === \"What's your name?\") {\n\n      setName(inputValue.current.value);\n      /**Empty input value and change placeholder text */\n      inputValue.current.value = \"\";\n      inputValue.current.placeholder = \"Time to translate\"\n\n      /**Animate/fade background out on input wrappers */\n      inputwrap.current.classList.toggle(\"nobg1\");\n      inputwhitewrap.current.classList.toggle(\"nobg2\");\n\n      /**Tell header to animate */\n      passToHeader()\n    }\n\n    if (inputValue.current.value && inputValue.current.placeholder === \"Time to translate\") {\n      /**Save translations */\n      setTranslation([SaveTranslations(inputValue.current.value)])\n      /**Pass input string to outputbox /translator */\n      passToOutPutBox(inputValue.current.value)\n    }\n\n  }\n\n  return (\n    <div>\n      {/* only show profile if you entered a name */}\n      {name.length > 0 && <Profile name={name} />}\n      <main>\n        <div ref={inputwrap} className=\"inputwrap\">\n          <div ref={inputwhitewrap} className=\"inputwhitewrap\">\n            <div className=\"formwrap\">\n              <div className=\"form-input \">\n                <label htmlFor=\"input\" className=\"iconl\"><FontAwesomeIcon className=\"far fa-keyboard\" icon='keyboard' /></label>\n                <div className=\"iconr\" onClick={addValue}><FontAwesomeIcon className=\"fas fon\" icon='arrow-alt-circle-right' /></div>\n                <input ref={inputValue} id=\"input\" type=\"text\" className=\"input\" placeholder=\"What's your name?\" pattern=\"[A-Za-z]\" aria-label=\"Enter your translation here\" required />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>);\n};\n\nexport default InputBar;","import './App.css';\n\nimport React, { useRef } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Appheader from './components/AppHeader'\nimport Home from './components/Home'\nimport Outputbox from './components/OutPutbox'\nimport Inputbar from './components/InputBar'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { faArrowAltCircleRight, faKeyboard } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, far, faArrowAltCircleRight, faKeyboard)\n\n\n\nfunction App() {\n\n      const headerRef = useRef();\n      const outputbox = useRef();\n\n      //using forwardRef to pass information from child component to child component\n      function passToHeader() {\n            /**Tell header to Animate */\n            headerRef.current.shrinkHeader()\n      }\n\n      function passToOutPutBox(strTotranslate) {\n            /**send input value to translation */\n            outputbox.current.translate(strTotranslate);\n      }\n\n      return (\n            <div>\n\n                  <Router>\n                        <Appheader ref={headerRef} />\n                        <Inputbar passToHeader={passToHeader} passToOutPutBox={passToOutPutBox} />\n                        <Switch>\n                              {/*just a blank component to have a home path*/}\n                              <Route exact path=\"/\" component={Home} />\n                              <Route path='/translate' component={() => <Outputbox ref={outputbox} />} />\n                        </Switch>\n\n                  </Router>\n\n            </div>\n      );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}